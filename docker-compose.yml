version: "3"

services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      orderbase_network:
        ipv4_address: 172.16.16.5
    depends_on:
#      server:
#        condition: service_healthy
      - server
    ports:
    - "3040:3000"

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: on-failure
    networks:
      orderbase_network:
        ipv4_address: 172.16.16.2
#    healthcheck:
#      test: curl --fail server:5000 || exit 1
    depends_on:
#      - db
       db:
         condition: service_healthy

  db:
    container_name: db
    build:
      context: ./db
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - /home/uncleniko/Projects/new/volumes/orderbase_db_volumes:/var/lib/mysql
    networks:
      orderbase_network:
        ipv4_address: 172.16.16.3
    healthcheck:
      test: curl --fail db:3306 || exit 1

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    restart: on-failure
    ports:
      - "8081:80"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: uncleniko
      MYSQL_PASSWORD: galatapodsalatom
    networks:
      orderbase_network:
        ipv4_address: 172.16.16.4
    depends_on:
      - db

  runmigration:
    container_name: runmigration
    build:
      context: ./server
      dockerfile: Dockerfile
    command: npx sequelize-cli db:migrate
    networks:
      orderbase_network:
        ipv4_address: 172.16.16.6
    depends_on:
      - server

networks:
  orderbase_network:
    ipam:
      driver: default
      config:
        - subnet: 172.16.16.0/16
#volumes:
#  db-data:
#    name: my-volume
#    external: true

